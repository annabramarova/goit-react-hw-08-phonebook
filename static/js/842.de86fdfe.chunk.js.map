{"version":3,"file":"static/js/842.de86fdfe.chunk.js","mappings":"+NAiFaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAejB,OACE,kBAAMC,SAda,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfN,GACEO,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGrCL,EAAKQ,OACN,EAG+BC,aAAa,MAA3C,WACE,yCAEE,kBAAOC,KAAK,OAAOP,KAAK,aAE1B,sCAEE,kBAAOO,KAAK,QAAQP,KAAK,cAE3B,yCAEE,kBAAOO,KAAK,WAAWP,KAAK,iBAE9B,mBAAQO,KAAK,SAAb,wBAGL,EC/Gc,SAASC,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAAClB,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.js","pages/RegistrationPage/RegistrationPage.js"],"sourcesContent":["// import { useFormik } from \"formik\";\n// import {\n//   Box,\n//   Button,\n//   Flex,\n//   FormControl,\n//   FormLabel,\n//   Input,\n//   VStack\n// } from \"@chakra-ui/react\";\n// import { useDispatch } from \"react-redux\";\n// import { register } from \"redux/auth/authOperations\";\n\n// const INITIAL_VALUES = {\n//     name: \"\",\n//     email: \"\",\n//     password: \"\",\n// }\n\n// export const RegisterForm = () => {\n    \n//     const dispatch = useDispatch();\n\n//     const formik = useFormik({\n//         initialValues: INITIAL_VALUES,\n//         onSubmit: ({name, email, password}, { resetForm }) => {\n//             dispatch(register( name, email, password ))\n//             resetForm();\n//         }\n//     });\n//     return (\n//         <Flex bg=\"gray.100\" align=\"center\" justify=\"center\" h=\"100vh\">\n//             <Box bg=\"white\" p={6} rounded=\"md\">\n//                 <form onSubmit={formik.handleSubmit}>\n//                     <VStack spacing={4} align=\"flex-start\">\n//                         <FormControl>\n//                             <FormLabel htmlFor=\"name\">Email Address</FormLabel>\n//                             <Input\n//                                 id=\"name\"\n//                                 name=\"name\"\n//                                 type=\"name\"\n//                                 variant=\"filled\"\n//                                 onChange={formik.handleChange}\n//                                 value={formik.values.name}\n//                             />\n//                         </FormControl>\n//                         <FormControl>\n//                             <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n//                             <Input\n//                                 id=\"email\"\n//                                 name=\"email\"\n//                                 type=\"email\"\n//                                 variant=\"filled\"\n//                                 onChange={formik.handleChange}\n//                                 value={formik.values.email}\n//                             />\n//                         </FormControl>\n//                         <FormControl>\n//                             <FormLabel htmlFor=\"password\">Password</FormLabel>\n//                             <Input\n//                                 id=\"password\"\n//                                 name=\"password\"\n//                                 type=\"password\"\n//                                 variant=\"filled\"\n//                                 onChange={formik.handleChange}\n//                                 value={formik.values.password}\n//                             />\n//                         </FormControl>\n//                         <Button type=\"submit\" colorScheme=\"purple\" width=\"full\">\n//                             Login\n//                         </Button>\n//                     </VStack>\n//                 </form>\n//             </Box>\n//         </Flex>\n//     );\n// };\n\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <label>\n        Username\n        <input type=\"text\" name=\"name\" />\n      </label>\n      <label>\n        Email\n        <input type=\"email\" name=\"email\" />\n      </label>\n      <label>\n        Password\n        <input type=\"password\" name=\"password\" />\n      </label>\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["RegisterForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","autoComplete","type","Register","Helmet"],"sourceRoot":""}