{"version":3,"file":"static/js/901.1b2fedea.chunk.js","mappings":"+NA0EaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAcjB,OACE,kBAAMC,SAba,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfN,GACEO,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGrCL,EAAKO,OACN,EAG+BC,aAAa,MAA3C,WACE,sCAEE,kBAAOC,KAAK,QAAQC,KAAK,cAE3B,yCAEE,kBAAOD,KAAK,WAAWC,KAAK,iBAE9B,mBAAQD,KAAK,SAAb,sBAGL,ECnGc,SAASE,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAAClB,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.js","pages/LoginPage/LoginPage.js"],"sourcesContent":["// import { Formik, Field } from \"formik\";\n// import {\n//   Box,\n//   Button,\n//   Checkbox,\n//   Flex,\n//   FormControl,\n//   FormLabel,\n//   FormErrorMessage,\n//   Input,\n//   VStack\n// } from \"@chakra-ui/react\";\n\n// export const LoginForm = () => {\n//     return (\n//         <Flex bg=\"gray.100\" align=\"center\" justify=\"center\" h=\"100vh\">\n//             <Box bg=\"white\" p={6} rounded=\"md\" w={64}>\n//                 <Formik\n//                     initialValues={{\n//                         email: \"\",\n//                         password: \"\",\n//                     }}\n//                     onSubmit={(values) => {\n//                         alert(JSON.stringify(values, null, 2));\n//                     }}\n//                 >\n//                     {({ handleSubmit, errors, touched }) => (\n//                         <form onSubmit={handleSubmit}>\n//                             <VStack spacing={4} align=\"flex-start\">\n//                                 <FormControl>\n//                                     <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n//                                     <Field\n//                                         as={Input}\n//                                         id=\"email\"\n//                                         name=\"email\"\n//                                         type=\"email\"\n//                                         variant=\"filled\"\n//                                     />\n//                                 </FormControl>\n//                                 <FormControl isInvalid={!!errors.password && touched.password}>\n//                                     <FormLabel htmlFor=\"password\">Password</FormLabel>\n//                                     <Field\n//                                         as={Input}\n//                                         id=\"password\"\n//                                         name=\"password\"\n//                                         type=\"password\"\n//                                         variant=\"filled\"\n//                                         validate={(value) => {\n//                                             let error;\n\n//                                             if (value.length < 6) {\n//                                                 error = \"Password must contain at least 6 characters\";\n//                                             }\n\n//                                             return error;\n//                                         }}\n//                                     />\n//                                     <FormErrorMessage>{errors.password}</FormErrorMessage>\n//                                 </FormControl>\n//                                 <Button type=\"submit\" colorScheme=\"purple\" width=\"full\">\n//                                     Login\n//                                 </Button>\n//                             </VStack>\n//                         </form>\n//                     )}\n//                 </Formik>\n//             </Box>\n//         </Flex>\n//     );\n// };\n\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/authOperations';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      login({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <label>\n        Email\n        <input type=\"email\" name=\"email\" />\n      </label>\n      <label>\n        Password\n        <input type=\"password\" name=\"password\" />\n      </label>\n      <button type=\"submit\">Log In</button>\n    </form>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["LoginForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","login","email","elements","value","password","reset","autoComplete","type","name","Login","Helmet"],"sourceRoot":""}